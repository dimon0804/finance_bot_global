import telebot 
from datetime import datetime
from database import *
from telebot import types
import time
import os


token = 'TOKEN'
bot = telebot.TeleBot(token)
tex = False
tconv = lambda x: time.strftime("%H:%M:%S %d.%m.%Y", time.localtime(x))

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å üë§')
    but2 = types.KeyboardButton('–î–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥')
    but3 = types.KeyboardButton('–ë–∞–ª–∞–Ω—Å')
    markup.add(but1, but2)
    markup.add(but3)
    return markup

def menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–î–æ—Ö–æ–¥')
    but2 = types.KeyboardButton('–†–∞—Å—Ö–æ–¥')
    but3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–∞—è üîô')
    but4 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥')
    but5 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥')
    markup.add(but1, but2)
    markup.add(but4, but5)
    markup.add(but3)
    return markup

def ang_main_menu():
     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
     but1 = types.KeyboardButton('Profile üë§')
     but2 = types.KeyboardButton('Income/Expense')
     but3 = types.KeyboardButton('Balance')
     markup.add(but1, but2)
     markup.add(but3)
     return markup

def ang_menu():
     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
     but1 = types.KeyboardButton('Income')
     but2 = types.KeyboardButton('Expense')
     but3 = types.KeyboardButton('Home üîô')
     but4 = types.KeyboardButton('Show last income')
     but5 = types.KeyboardButton('Show last expense')
     markup.add(but1, but2)
     markup.add(but4, but5)
     markup.add(but3)
     return markup

def adm_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞')
    but2 = types.KeyboardButton('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ')
    but3 = types.KeyboardButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã')
    but5 = types.KeyboardButton('–ë–∞–Ω')
    but7 = types.KeyboardButton('–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
    but6 = types.KeyboardButton('–ì–ª–∞–≤–Ω–∞—è üîô')
    markup.add(but1, but2, but3, but5, but7)
    markup.add(but6)
    return markup

def ang_adm_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('Broadcast')
    but2 = types.KeyboardButton('Maintenance')
    but3 = types.KeyboardButton('Administrators')
    but5 = types.KeyboardButton('Ban')
    but7 = types.KeyboardButton('System control')
    but6 = types.KeyboardButton('Home üîô')
    markup.add(but1, but2, but3, but5, but7)
    markup.add(but6)
    return markup

def TO_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('/tex')
    but2 = types.KeyboardButton('/offtex')
    but3 = types.KeyboardButton('–ù–∞–∑–∞–¥ üîô')
    markup.add(but1, but2)
    markup.add(but3)
    return markup

def ang_TO_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('/tex')
    but2 = types.KeyboardButton('/offtex')
    but3 = types.KeyboardButton('Back üîô')
    markup.add(but1, but2)
    markup.add(but3)
    return markup

def admins():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    but2 = types.KeyboardButton('–£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    but3 = types.KeyboardButton('–ù–∞–∑–∞–¥ üîô')
    markup.add(but1, but2)
    markup.add(but3)
    return markup

def ang_admins():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('Add Administrator')
    but2 = types.KeyboardButton('Remove Administrator')
    but3 = types.KeyboardButton('Back üîô')
    markup.add(but1, but2)
    markup.add(but3)
    return markup

def bans():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
    but2 = types.KeyboardButton('–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
    but3 = types.KeyboardButton('–ù–∞–∑–∞–¥ üîô')
    markup.add(but1, but2)
    markup.add(but3)
    return markup

def ang_bans():
     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
     but1 = types.KeyboardButton('Lock')
     but2 = types.KeyboardButton('Unlock')
     but3 = types.KeyboardButton('Back üîô')
     markup.add(but1, but2)
     markup.add(but3)
     return markup

def exit():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(but1)
    return markup

def ang_exit():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('Back')
    markup.add(but1)
    return markup

def exit_admin():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('–ù–∞–∑–∞–¥ üîô')
    markup.add(but1)
    return markup

def ang_exit_admin():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton('Back üîô')
    markup.add(but1)
    return markup

def next_msg(message):
    income_user = message.text
    user_id = message.from_user.id
    data = datetime.today()
    data = data.strftime("%d-%m-%Y")
    if chek_language(user_id=user_id) =='RU':
        if income_user == '–ù–∞–∑–∞–¥' or income_user == '–Ω–∞–∑–∞–¥' or income_user == '/exit':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=main_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –¶–ò–§–†–ê–ú–ò –±–µ–∑ –±—É–∫–≤')
            bot.register_next_step_handler(message, next_msg)
        else:
            add_income(user_id=user_id, income=income_user, data=data)
            bot.send_message(message.chat.id,'‚úÖ –î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É', reply_markup=menu())
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance(user_id=user_id)}')
    elif chek_language(user_id=user_id) == 'ANG':
        if income_user == 'Back' or income_user == 'back' or income_user == '/exit':
            bot.send_message(message.chat.id, 'Enter command', reply_markup=main_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, 'To add income, write in NUMBERS without letters')
            bot.register_next_step_handler(message, next_msg)
        else:
            add_income(user_id=user_id, income=income_user, data=data)
            bot.send_message(message.chat.id,'‚úÖ Income added to base', reply_markup=ang_menu())
            bot.send_message(message.chat.id, f'Your balance: {balance(user_id=user_id)}')
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')

def next_msg_ex(message):
    expense_user = message.text
    user_id = message.from_user.id
    data = datetime.today()
    data = data.strftime("%d-%m-%Y")
    if chek_language(user_id=user_id) == 'RU':
        if expense_user == '–ù–∞–∑–∞–¥' or expense_user == '–Ω–∞–∑–∞–¥' or expense_user == '/exit':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=main_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ –Ω–∞–¥–æ –Ω–∞–ø–∏—Å–∞—Ç—å –¶–ò–§–†–ê–ú–ò –±–µ–∑ –±—É–∫–≤')
            bot.register_next_step_handler(message, next_msg)
        else:
            add_expense(user_id=user_id, expense=expense_user, data=data)
            bot.send_message(message.chat.id,'‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É', reply_markup=menu())
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance(user_id=user_id)}')
    elif chek_language(user_id=user_id) == 'ANG':
        if expense_user == 'Back' or expense_user == 'back' or expense_user == '/exit':
             bot.send_message(message.chat.id, 'Enter command', reply_markup=main_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, 'To add an expense, write in NUMBERS without letters')
            bot.register_next_step_handler(message, next_msg)
        else:
            add_expense(user_id=user_id, expense=expense_user, data=data)
            bot.send_message(message.chat.id,'‚úÖ Consumption added to base', reply_markup=ang_menu())
            bot.send_message(message.chat.id, f'Your balance: {balance(user_id=user_id)}')
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')

def add_msg(message):
    user_id = message.text
    user_adm = message.from_user.id
    if chek_language(user_id=user_adm) == 'RU':
        if user_id == '–ù–∞–∑–∞–¥ üîô' or user_id == '–Ω–∞–∑–∞–¥ üîô':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ ID telegram (—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä)')
            bot.register_next_step_handler(message, add_msg)
        else:
            add_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been made a bot administrator. Congratulations!')
    else:
        if user_id == 'Back üîô' or user_id == 'back üîô':
            bot.send_message(message.chat.id, 'Enter command', reply_markup=ang_adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, 'To add an administrator, you need to write his telegram ID (consisting of numbers)')
            bot.register_next_step_handler(message, add_msg)
        else:
            add_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ Administrator added.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been made a bot administrator. Congratulations!')

def clr_msg(message):
    user_id = message.text
    user_adm = message.from_user.id
    if chek_language(user_id=user_adm) == 'RU':
        if user_id == '–ù–∞–∑–∞–¥ üîô' or user_id == '–Ω–∞–∑–∞–¥ üîô':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, '–î–ª—è —É–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ ID telegram (—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä)')
            bot.register_next_step_handler(message, clr_msg)
        else:
            clr_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å —É–±—Ä–∞–ª–∏ –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞.')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been removed from the bot admin.')
    else:
        if user_id == 'Back üîô' or user_id == 'back üîô':
            bot.send_message(message.chat.id, 'Enter command', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, 'To delete an administrator, you need to write his telegram ID (consisting of numbers)')
            bot.register_next_step_handler(message, clr_msg)
        else:
            clr_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ Administrator deleted.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å —É–±—Ä–∞–ª–∏ –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞.')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been removed from the bot admin.')

def ban_msg(message):
    user_id = message.text
    user_adm = message.from_user.id
    if chek_language(user_id=user_adm) == 'RU':
        if user_id == '–ù–∞–∑–∞–¥ üîô' or user_id == '–Ω–∞–∑–∞–¥ üîô':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–Ω –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ ID telegram (—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä)')
            bot.register_next_step_handler(message, ban_msg)
        else:
            ban_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤ –±–æ—Ç–µ.')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been blocked in the bot.')
    else:
        if user_id == 'Back üîô' or user_id == 'back üîô':
            bot.send_message(message.chat.id, 'Enter command', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, 'To add a user to the ban, you need to write his telegram ID (consisting of numbers)')
            bot.register_next_step_handler(message, ban_msg)
        else:
            ban_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ You blocked the person.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤ –±–æ—Ç–µ.')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been blocked in the bot.')


def clr_ban_msg(message):
    user_id = message.text
    if chek_language(user_id=user_id) == 'RU':
        if user_id == '–ù–∞–∑–∞–¥ üîô' or user_id == '–Ω–∞–∑–∞–¥ üîô':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, '–î–ª—è —Å–Ω—è—Ç–∏–µ –±–∞–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ ID telegram (—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä)')
            bot.register_next_step_handler(message, clr_ban_msg)
        else:
            clr_ban_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ –í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤ –±–æ—Ç–µ. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been unblocked in the bot. Congratulations!')
    else:
        if user_id == 'Back üîô' or user_id == 'back üîô':
            bot.send_message(message.chat.id, 'Enter command', reply_markup=adm_menu())
        elif not message.text.isnumeric():
            bot.send_message(message.chat.id, 'To remove a ban from a user, you need to write his telegram ID (consisting of numbers)')
            bot.register_next_step_handler(message, clr_ban_msg)
        else:
            clr_ban_admin(user_id=user_id)
            bot.send_message(message.chat.id,'‚úÖ You unblocked the person.')
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(user_id, '‚ùóÔ∏è –í–∞—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤ –±–æ—Ç–µ. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!')
            else:
                bot.send_message(user_id, '‚ùóÔ∏è You have been unblocked in the bot. Congratulations!')

def mailings_msg(message):
    global mail
    msg = message.text
    user_adm = message.from_user.id
    if chek_language(user_id=user_adm) == 'RU':
        if msg == '–ù–∞–∑–∞–¥ üîô' or msg == '–ù–∞–∑–∞–¥ üîô':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=adm_menu())
        else:
            mail = mailings()
            bot.send_message(mail, msg)
            bot.send_message(message.chat.id, '‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.')
    else:
        if msg == 'Back üîô' or msg == 'back üîô':
            bot.send_message(message.chat.id, 'Enter command', reply_markup=adm_menu())
        else:
            mail = mailings()
            bot.send_message(mail, msg)
            bot.send_message(message.chat.id, '‚úâÔ∏è Message sent by all user.')

@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    user_id = call.from_user.id
    if chek_language(user_id=user_id) == 'RU':
        if tex == False:
            bot.answer_callback_query(callback_query_id=call.id, text = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...\n–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥!')
            time.sleep(5)
            if call.data == '1004':
                bot.send_message(call.message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –±–æ—Ç–∞. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!!')
                bot.stop_polling()
            elif call.data == '1005':
                bot.send_message(call.message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ñ–∏–Ω–∞–Ω—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö! –í–µ—Ä–Ω—É—Ç—å –∏—Ö –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.')
                delete_fin(user_id=user_id)
            elif call.data == '1006':
                stopping_markup = types.InlineKeyboardMarkup()
                but = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞', callback_data=1004)
                stopping_markup.add(but)
                bot.send_message(call.message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞? –ï—Å–ª–∏ –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞, —Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!!', reply_markup=stopping_markup)
            elif call.data == '1007':
                try:
                    file = open('logs.txt', 'rb')
                    bot.send_document(call.message.chat.id, file)
                except FileNotFoundError:
                    bot.send_message(call.message.chat.id, '–ù–∞ –¥–∞–Ω–Ω—ã–π  –º–æ–º–µ–Ω—Ç –ª–æ–≥–æ–≤ –Ω–µ—Ç.')
            elif call.data == '1008':
                try:
                    os.remove(os.path.join('logs.txt'))
                    bot.send_message(call.message.chat.id, '–§–∞–π–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –í–æ–∑—Ä–∞—â–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ!')
                except FileNotFoundError:
                    bot.send_message(call.message.chat.id, '–ù–µ—Ç —Ñ–∞–π–ª–∞ —Å –ª–æ–≥–∞–º–∏.')
            elif call.data == '1009':
                bot.send_message(call.message.chat.id, '‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω!')
                set_language(user_id=user_id, language='RU')
                bot.send_message(call.message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {0.first_name}, –≤ –±–æ—Ç–µ –ø–æ —É—á–µ—Ç—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –í–∞—Å –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –∏ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞—è –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –¥–∞–∂–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ ‚Äì –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è.\n–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞, –í—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n–£—Ç–µ—á–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Å –∫–∞–∂–¥—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –Ω–∞—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—ã—Ç–∞—é—Ç—Å—è —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –∏ –∑–∞—â–∏—Ç—É –±–æ—Ç–∞.\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ, –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –∏–º–µ–Ω–Ω–æ –í–∞–º - –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚Äú–∫–æ–º–∞–Ω–¥—ã‚Äù –±–µ–∑ —Å–∫–æ–±–æ—á–µ–∫.\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞.'.format(call.message.from_user), reply_markup=main_menu())
                time.sleep(3)
            elif call.data == '1010':
                bot.send_message(call.message.chat.id, '‚úÖ Language selected!')
                set_language(user_id=user_id, language='ANG')
                bot.send_message(call.message.chat.id, 'Welcome, {0.first_name}, to the finance accounting bot. The bot works for you around the clock and does not drop any data, even after deleting this chat, all data will be saved.\nBy continuing to use the bot, you sign consent to the processing and storage of your personal data.\nData leakage does not occur, with each update of the bot, our developers try improve the work and protection of the bot.\nTo learn more about the bot, you can type the /help command, and to find out the list of commands that are available to you, type the ‚Äúcommands‚Äù command without parentheses.\n\nEnjoy using bot.'.format(call.message.from_user), reply_markup=main_menu())
            elif call.data == '1011':
                set_language(user_id=user_id, language='RU')
                bot.send_message(call.message.chat.id, '‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω!')
            elif call.data == '1012':
                set_language(user_id=user_id, language='ANG')
                bot.send_message(call.message.chat.id, '‚úÖ Language selected!')
        else:
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –Ω–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –ø–æ –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–µ–∫—Ç–∞, –ª–∏–±–æ –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞. –ù–∞ –º–æ–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –í–∞–º –±—É–¥–µ—Ç –≤–æ–∑—Ä–∞—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∞–±–µ—Ä–∏—Ç–µ—Å—å —Ç–µ—Ä–ø–µ–Ω–∏—è. –ü—Ä–æ—Å–∏–º –ø—Ä–æ—à–µ–Ω–∏—è! –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ.')
    elif chek_language(user_id=user_id) == 'ANG':
        if tex == False:
            bot.answer_callback_query(callback_query_id=call.id, text = 'Operation in progress...\nCompletion of operation in 5 seconds!')
            time.sleep(5)
            if call.data == '1004':
                bot.send_message(call.message.chat.id, 'You have successfully stopped the bot. Launching the bot only through the System Administrator!!!')
                bot.stop_polling()
            elif call.data == '1005':
                bot.send_message(call.message.chat.id, 'You have successfully deleted finances from the database! It is impossible to return them.')
                delete_fin(user_id=user_id)
            elif call.data == '1006':
                stopping_markup = types.InlineKeyboardMarkup()
                but = types.InlineKeyboardButton(text='‚úÖ Confirm bot stop', callback_data=1004)
                stopping_markup.add(but)
                bot.send_message(call.message.chat.id, 'Confirm Bot StopAre you sure you want to stop the bot? If you stop the bot, then you can start it only through the System Administrator!!!', reply_markup=stopping_markup)
            elif call.data == '1007':
                try:
                    file = open('logs.txt', 'rb')
                    bot.send_document(call.message.chat.id, file)
                except FileNotFoundError:
                    bot.send_message(call.message.chat.id, 'There are currently no logs.')
            elif call.data == '1008':
                try:
                    os.remove(os.path.join('logs.txt'))
                    bot.send_message(call.message.chat.id, 'The file has been removed from the system. Returning the file is not possible!')
                except FileNotFoundError:
                    bot.send_message(call.message.chat.id, 'There is no log file.')
            elif call.data == '1009':
                bot.send_message(call.message.chat.id, '‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω!')
                set_language(user_id=user_id, language='RU')
                bot.send_message(call.message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {0.first_name}, –≤ –±–æ—Ç–µ –ø–æ —É—á–µ—Ç—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –í–∞—Å –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –∏ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞—è –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –¥–∞–∂–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ ‚Äì –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è.\n–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞, –í—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n–£—Ç–µ—á–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Å –∫–∞–∂–¥—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –Ω–∞—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—ã—Ç–∞—é—Ç—Å—è —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –∏ –∑–∞—â–∏—Ç—É –±–æ—Ç–∞.\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ, –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –∏–º–µ–Ω–Ω–æ –í–∞–º - –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚Äú–∫–æ–º–∞–Ω–¥—ã‚Äù –±–µ–∑ —Å–∫–æ–±–æ—á–µ–∫.\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞.'.format(call.message.from_user), reply_markup=main_menu())
                time.sleep(3)
            elif call.data == '1010':
                bot.send_message(call.message.chat.id, '‚úÖ Language selected!')
                set_language(user_id=user_id, language='ANG')
                bot.send_message(call.message.chat.id, 'Welcome, {0.first_name}, to the finance accounting bot. The bot works for you around the clock and does not drop any data, even after deleting this chat, all data will be saved.\nBy continuing to use the bot, you sign consent to the processing and storage of your personal data.\nData leakage does not occur, with each update of the bot, our developers try improve the work and protection of the bot.\nTo learn more about the bot, you can type the /help command, and to find out the list of commands that are available to you, type the ‚Äúcommands‚Äù command without parentheses.\n\nEnjoy using bot.'.format(call.message.from_user), reply_markup=main_menu())
            elif call.data == '1011':
                set_language(user_id=user_id, language='RU')
                bot.send_message(call.message.chat.id, '‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω!')
            elif call.data == '1012':
                set_language(user_id=user_id, language='ANG')
                bot.send_message(call.message.chat.id, '‚úÖ Language selected!')
        else:
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è We apologize, but the bot has been sent for Maintenance, for some reason. Expect news from the project team, or the inclusion of a bot. At the time of the bot maintenance, you cannot use it, if you try to use the bot, an error message will be returned to you. Be patient. We apologize! Good luck.')
    else:
        if tex == False:
            bot.answer_callback_query(callback_query_id=call.id, text = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...\n–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥!\n\nOperation in progress...\nCompletion of operation in 5 seconds!')
            time.sleep(5)
            if call.data == '1004':
                bot.send_message(call.message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –±–æ—Ç–∞. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!!\nYou have successfully stopped the bot. Launching the bot only through the System Administrator!!!')
                bot.stop_polling()
            elif call.data == '1005':
                bot.send_message(call.message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ñ–∏–Ω–∞–Ω—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö! –í–µ—Ä–Ω—É—Ç—å –∏—Ö –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\nYou have successfully deleted finances from the database! It is impossible to return them.')
                delete_fin(user_id=user_id)
            elif call.data == '1006':
                stopping_markup = types.InlineKeyboardMarkup()
                but = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞\nConfirm bot stop', callback_data=1004)
                stopping_markup.add(but)
                bot.send_message(call.message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞? –ï—Å–ª–∏ –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞, —Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!!\nConfirm Bot StopAre you sure you want to stop the bot? If you stop the bot, then you can start it only through the System Administrator!!!', reply_markup=stopping_markup)
            elif call.data == '1007':
                try:
                    file = open('logs.txt', 'rb')
                    bot.send_document(call.message.chat.id, file)
                except FileNotFoundError:
                    bot.send_message(call.message.chat.id, '–ù–∞ –¥–∞–Ω–Ω—ã–π  –º–æ–º–µ–Ω—Ç –ª–æ–≥–æ–≤ –Ω–µ—Ç.\nThere are currently no logs.')
            elif call.data == '1008':
                try:
                    os.remove(os.path.join('logs.txt'))
                    bot.send_message(call.message.chat.id, '–§–∞–π–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –í–æ–∑—Ä–∞—â–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ!\nThe file has been removed from the system. Returning the file is not possible!')
                except FileNotFoundError:
                    bot.send_message(call.message.chat.id, '–ù–µ—Ç —Ñ–∞–π–ª–∞ —Å –ª–æ–≥–∞–º–∏.\nThere is no log file.')
            elif call.data == '1009':
                bot.send_message(call.message.chat.id, '‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω!')
                set_language(user_id=user_id, language='RU')
                bot.send_message(call.message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {0.first_name}, –≤ –±–æ—Ç–µ –ø–æ —É—á–µ—Ç—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –í–∞—Å –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –∏ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞—è –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –¥–∞–∂–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ ‚Äì –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è.\n–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞, –í—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n–£—Ç–µ—á–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Å –∫–∞–∂–¥—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç–∞ –Ω–∞—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—ã—Ç–∞—é—Ç—Å—è —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –∏ –∑–∞—â–∏—Ç—É –±–æ—Ç–∞.\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ, –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –∏–º–µ–Ω–Ω–æ –í–∞–º - –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚Äú–∫–æ–º–∞–Ω–¥—ã‚Äù –±–µ–∑ —Å–∫–æ–±–æ—á–µ–∫.\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞.'.format(call.message.from_user), reply_markup=main_menu())
                time.sleep(3)
            elif call.data == '1010':
                bot.send_message(call.message.chat.id, '‚úÖ Language selected!')
                set_language(user_id=user_id, language='ANG')
                bot.send_message(call.message.chat.id, 'Welcome, {0.first_name}, to the finance accounting bot. The bot works for you around the clock and does not drop any data, even after deleting this chat, all data will be saved.\nBy continuing to use the bot, you sign consent to the processing and storage of your personal data.\nData leakage does not occur, with each update of the bot, our developers try improve the work and protection of the bot.\nTo learn more about the bot, you can type the /help command, and to find out the list of commands that are available to you, type the ‚Äúcommands‚Äù command without parentheses.\n\nEnjoy using bot.'.format(call.message.from_user), reply_markup=main_menu())
            elif call.data == '1011':
                set_language(user_id=user_id, language='RU')
                bot.send_message(call.message.chat.id, '‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω!')
            elif call.data == '1012':
                set_language(user_id=user_id, language='ANG')
                bot.send_message(call.message.chat.id, '‚úÖ Language selected!')
        else:
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –Ω–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –ø–æ –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–µ–∫—Ç–∞, –ª–∏–±–æ –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞. –ù–∞ –º–æ–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –í–∞–º –±—É–¥–µ—Ç –≤–æ–∑—Ä–∞—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∞–±–µ—Ä–∏—Ç–µ—Å—å —Ç–µ—Ä–ø–µ–Ω–∏—è. –ü—Ä–æ—Å–∏–º –ø—Ä–æ—à–µ–Ω–∏—è! –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ.\nWe apologize, but the bot has been sent for Maintenance, for some reason. Expect news from the project team, or the inclusion of a bot. At the time of the bot maintenance, you cannot use it, if you try to use the bot, an error message will be returned to you. Be patient. We apologize! Good luck.')


@bot.message_handler(commands = ['start'])
def start(message):
    file = open('logs.txt', 'a')
    file.write(f'–ù–æ–≤–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
    file.close()
    user_id = message.from_user.id
    if tex == False:
        try:
            user_id = message.from_user.id
            user_name = message.from_user.first_name
            data = datetime.today()
            data = data.strftime("%d-%m-%Y")
            add_user(user_id=user_id, user_name=user_name, data=data)
            language_markup = types.InlineKeyboardMarkup(row_width=1)
            but1 = types.InlineKeyboardButton(text='üá∑üá∫  –†—É—Å—Å–∫–∏–π (RUS)', callback_data=1009)
            but2 = types.InlineKeyboardButton(text='üá∫üá∏ English (ENG)', callback_data=1010)
            language_markup.add(but1, but2)
            bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º.\nSelect a language for further work with it.', reply_markup=language_markup)
        except sqlite3.IntegrityError:
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ.')
            elif chek_language(user_id=user_id) == 'ANG':
                bot.send_message(message.chat.id, '‚ö†Ô∏è You are already registered in the bot.')
            else:
                bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')
    else:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ!\n ‚ö†Ô∏è Sorry, the bot has been sent for maintenance!')

@bot.message_handler(commands=['help'])
def help(message):
    file = open('logs.txt', 'a', encoding="utf-8")
    file.write(f'–ù–æ–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
    file.close()
    user_id = message.from_user.id
    if tex == False:
        if chek_ban(user_id=user_id) == 'False':
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(message.chat.id, '–î–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –±–ª–∞–≥–æ–¥–æ—Ä–∏–º –í–∞—Å —á—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–º. –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ª—é–¥–µ–π, —É—á–∏—Ç—ã–≤–∞—Ç—å –∏—Ö –¥–æ—Ö–æ–¥ –∏ —Ä–∞—Å—Ö–æ–¥. –° –∫–∞–∂–¥—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–æ—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –≤—Å–µ –ª—É—á—à–µ –∏ –ª—É—á—à–µ, –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –¥–ª—è –í–ê–°! –í—Å–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, id, user, –¥–æ—Ö–æ–¥, —Ä–∞—Å—Ö–æ–¥, –±–∞–ª–∞–Ω—Å) –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –∏ –¥–∞–ª—å—à–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏ —Ä—É–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ —É—Ö–æ–¥—è—Ç. –¢–∞–∫–∂–µ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä—É–¥–∏—Ç—Å—è –Ω–∞–¥ —ç—Ç–∏–º –±–æ—Ç–æ–º —Å –∫–∞–∂–¥—ã–º —Ä–∞–∑–æ–º —É—Å–∏–ª–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å, —á—Ç–æ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ø–∞–¥—É—Ç –≤ —á—É–∂–∏–µ —Ä—É–∫–∏ –∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º. \n–ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É, –ª–∏–±–æ –∂–µ –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–º  –Ω–∞ –ø–æ—á—Ç—É: dimongamedeveloper@yandex.ru, –ª–∏–±–æ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. ', reply_markup=main_menu())
                time.sleep(3)
            elif chek_language(user_id=user_id) == 'ANG':
                bot.send_message(message.chat.id, "Dear user, thank you for being interested in our product. The bot was created solely for the convenience of people, taking into account their income and expense. With each update, the bot is getting better and better, we are trying for YOU! All data (name, id, user, income, expense, balance) will be stored in the database of this bot and then this bot and the hands of the project team do not go away. Also, the development team that is working on this bot is strengthening the security of our product every time. You don't have to worry that your data will fall into the wrong hands and will be used in the future. \n If you have a proposal for this project, or for the implementation of a new project, please write to us by email: dimongamedeveloper@yandex.ru , or in the community of our company: In development.", reply_markup=main_menu())
                time.sleep(3)
            else:
                bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')
        else:
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')
                time.sleep(3)
            elif chek_language(user_id=user_id) == 'ANG':
                bot.send_message(message.chat.id, "‚ùóÔ∏è You are blocked in this bot. You can't use it")
                time.sleep(3)
            else:
                bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')
    else:
        if chek_language(user_id=user_id) == 'RU':
            bot.send_message(message.chat.id, '‚ö†Ô∏è –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –Ω–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –ø–æ –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–µ–∫—Ç–∞, –ª–∏–±–æ –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞. –ù–∞ –º–æ–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –í–∞–º –±—É–¥–µ—Ç –≤–æ–∑—Ä–∞—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∞–±–µ—Ä–∏—Ç–µ—Å—å —Ç–µ—Ä–ø–µ–Ω–∏—è. –ü—Ä–æ—Å–∏–º –ø—Ä–æ—à–µ–Ω–∏—è! –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ.')
        elif chek_language(user_id=user_id) == 'ANG':
            bot.send_message(message.chat.id, '‚ö†Ô∏è We apologize, but the bot has been sent for Maintenance, for some reason. Expect news from the project team, or the inclusion of a bot. At the time of the bot maintenance, you cannot use it, if you try to use the bot, an error message will be returned to you. Be patient. We ask for your forgiveness! Good luck.')
        else:
            bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')

@bot.message_handler(commands=['admlogin'])
def admlogin(message):
    file = open('logs.txt', 'a')
    file.write(f'–ù–æ–≤–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
    file.close()
    user_id = message.from_user.id
    if chek_ban(user_id=user_id) == 'False':
        if chek_admin(user_id=user_id) == 'True':
            bot.send_message(message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏. {0.first_name}, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞.'.format(message.from_user), reply_markup=adm_menu())
        else:
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!')
            else:
                bot.send_message(message.chat.id, 'üö´ You are not an administrator. You cannot log in to the admin panel!')
    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')

@bot.message_handler(commands=['tex'])
def tex(message):
    file = open('logs.txt', 'a')
    file.write(f'–ù–æ–≤–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
    file.close()
    global tex
    user_id = message.from_user.id
    if chek_ban(user_id=user_id) == 'False':
        if chek_admin(user_id=user_id) == 'True':
            tex = True
            bot.send_message(message.chat.id, '‚úÖ –í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –±–æ—Ç–∞ –Ω–∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ... –î–ª—è —Å–Ω—è—Ç–∏–µ –±–æ—Ç–∞ —Å –¢–û –ø—Ä–æ–ø–∏—à–∏—Ç–µ /offtex')
        else:
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
            else:
                bot.send_message(message.chat.id, "üö´ You are not an administrator. You don't have access rights!")
    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')

@bot.message_handler(commands=['offtex'])
def offtex(message):
    file = open('logs.txt', 'a')
    file.write(f'–ù–æ–≤–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
    file.close()
    global tex
    user_id = message.from_user.id
    if chek_ban(user_id=user_id) == 'False':
        if chek_admin(user_id=user_id) == 'True':
            tex = False
            bot.send_message(message.chat.id, '‚úÖ –í—ã —Å–Ω—è–ª–∏ –±–æ—Ç–∞ —Å –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.')
        else:
            if chek_language(user_id=user_id) == 'RU':
                bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
            else:
                bot.send_message(message.chat.id, "üö´ You are not an administrator. You don't have access rights!")
    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')

@bot.message_handler(commands=['language'])
def language(message):
    global tex
    user_id = message.from_user.id
    if tex == False:
        if chek_user(user_id=user_id) == 'True':
            if chek_ban(user_id=user_id) == 'False':
                file = open('logs.txt', 'a', encoding='utf-8')
                file.write(f'–ù–æ–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
                language = types.InlineKeyboardMarkup(row_width=1)
                but1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π (RUS)', callback_data=1011)
                but2 = types.InlineKeyboardButton(text='üá∫üá∏ English (ANG)', callback_data=1012)
                language.add(but1, but2)
                bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –Ω—É–∂–Ω–∞ –≤—ã–±—Ä–∞—Ç—å –≤ –Ω–∏–∑—É –ø–æ–¥—Ö–æ–¥—è—à–∏—é –∫–Ω–æ–ø–∫—É.\n\nIn order to change the language, you need to select the appropriate button at the bottom.', reply_markup=language)
            else:
                if chek_language(user_id=user_id) == 'RU':
                    bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')
                    time.sleep(3)
                else:
                    bot.send_message(message.chat.id, "‚ùóÔ∏è You are blocked in this bot. You can't use it")
                    time.sleep(3)
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\nYou are not registered!')
            time.sleep(3)
    else:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ!\n ‚ö†Ô∏è Sorry, the bot has been sent for maintenance!')
    
@bot.message_handler(content_types = ['text'])
def bot_message(message):
    file = open('logs.txt', 'a', encoding='utf-8')
    file.write(f'–ù–æ–≤—ã–π –≤–≤–æ–¥: ID: {message.from_user.id}, NAME: {message.from_user.first_name}, USER_NAME: {message.from_user.username}, DATA: {tconv(message.date)}, TEXT: {message.text} \n')
    global tex
    user_id = message.from_user.id
    if tex == False:
        if chek_user(user_id=user_id) == 'True':
            if chek_ban(user_id=user_id) == 'False':
                if chek_language(user_id=user_id) == 'RU':
                    if message.text == '–î–æ—Ö–æ–¥' or message.text == '–¥–æ—Ö–æ–¥' or message.text == '/inc':
                        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¶–ò–§–†–ê–ú–ò –æ –í–∞—à–µ–º –¥–æ—Ö–æ–¥–µ', reply_markup=exit())
                        bot.register_next_step_handler(message, next_msg)
                    elif message.text == '–†–∞—Å—Ö–æ–¥' or message.text == '—Ä–∞—Å—Ö–æ–¥' or message.text == '/cost':
                        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¶–ò–§–†–ê–ú–ò –æ –í–∞—à–µ–º —Ä–∞—Å—Ö–æ–¥–µ', reply_markup=exit())
                        bot.register_next_step_handler(message, next_msg_ex)
                    elif message.text == '–ë–∞–ª–∞–Ω—Å' or message.text == '–±–∞–ª–∞–Ω—Å' or message.text == '/balance':
                        try:
                            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤: {balance(user_id=user_id)} —Ä—É–±–ª–µ–π', reply_markup=main_menu())
                            time.sleep(3)
                        except TypeError:
                            bot.send_message(message.chat.id, '‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
                            time.sleep(3)
                    elif message.text == '–ü—Ä–æ—Ñ–∏–ª—å üë§' or message.text == '–ü—Ä–æ—Ñ–∏–ª—å' or message.text == '–ø—Ä–æ—Ñ–∏–ª—å' or message.text == '/prof':
                        name = '{0.first_name}'.format(message.from_user)
                        bot.send_message(message.chat.id, f'üìä –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\nüë§ –í–∞—à–µ –∏–º—è: {name}\nüñ•  –í–∞—à Telegram ID: {message.from_user.id}\nüñ•  –í–∞—à username: @{message.from_user.username}\n–†–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ: {data_reg(user_id=user_id)}\n–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤ –±–æ—Ç–µ: {chek_ban(user_id=user_id)}\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞: {chek_admin(user_id=user_id)}\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance(user_id=user_id)}', reply_markup=main_menu())
                        time.sleep(3)
                    elif message.text == '–î–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥':
                        bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–µ—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–µ... ', reply_markup=menu())
                        time.sleep(3) 
                    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥' or message.text == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥' or message.text == '/last_inc':
                        bot.send_message(message.chat.id, f'–ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω: {data_income(user_id=user_id)}\n–°—É–º–º–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Ö–æ–¥–∞: {last_income(user_id=user_id)}', reply_markup=menu())
                        time.sleep(3)
                    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥' or message.text == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥' or message.text == '/last_cost':
                        bot.send_message(message.chat.id, f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω: {data_expense(user_id=user_id)}\n–°—É–º–º–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞: {last_expense(user_id=user_id)}', reply_markup=menu())
                        time.sleep(3)
                    elif message.text == '–ì–ª–∞–≤–Ω–∞—è üîô':
                        bot.send_message(message.chat.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_menu())
                        time.sleep(3)
                    elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞' or message.text == '—Ä–∞—Å—Å—ã–ª–∫–∞' or message.text == '/mailing':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞...', reply_markup=exit_admin())
                            bot.register_next_step_handler(message, mailings_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' or message.text == '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–í—ã –≤ –ø–∞–Ω–µ–ª–∏ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –±–æ—Ç–∞. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ', reply_markup=TO_menu())
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã' or message.text == '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–í—ã –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ.', reply_markup=admins())
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–ë–∞–Ω' or message.text == '–ë–∞–Ω':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–í—ã –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ.', reply_markup=bans())
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–ù–∞–∑–∞–¥ üîô' or message.text == '–Ω–∞–∑–∞–¥ üîô':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–í—ã –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ.', reply_markup=adm_menu())
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '–¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '/setadmin':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã...', reply_markup=exit_admin())
                            bot.register_next_step_handler(message, add_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '—É–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '/unadmin':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–±—Ä–∞—Ç—å –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...', reply_markup=exit_admin())
                            bot.register_next_step_handler(message, clr_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '/ban':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å...', reply_markup=exit_admin())
                            bot.register_next_step_handler(message, ban_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '/unban':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å...', reply_markup=exit_admin())
                            bot.register_next_step_handler(message, clr_ban_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' or message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' or message.text == '/allusers':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{all_users()}')
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '–ö–æ–º–∞–Ω–¥—ã' or message.text == '–∫–æ–º–∞–Ω–¥—ã' or message.text == '/cmd':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã –ø–æ —Ä–∞–∑–Ω–æ–º—É. –ö–∞–∫ —Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, —Ç–∞–∫ –∏ –∞–Ω–≥–ª–∏—Å–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.\n–ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n/prof - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–û–¢–ï\n/inc - –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥\n/cost - –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥\n/balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n/last_inc - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n/last_cost - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n/delete_fin - —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ—Å—Ç–∞—é—Ç—Å—è (–æ–±–Ω—É–ª—è–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å, –¥–æ—Ö–æ–¥,—Ä–∞—Å—Ö–æ–¥)\n/language - –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n\n–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: \n/setadmin - –¥–æ–±–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/unadmin - —É–±–∏—Ä–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/mailing - –¥–µ–ª–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n/tex - —Å—Ç–∞–≤–∏—Ç –±–æ—Ç–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\n/offtex - —Å–Ω–∏–º–∞–µ—Ç –±–æ—Ç–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\n/ban - –±–∞–Ω–∏—Ç —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç–µ –∏ —á–µ–ª–æ–≤–µ–∫ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É\n/unban - —Å–Ω–∏–º–∞–µ—Ç –±–∞–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–Ω –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n/allusers - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞\n/stopping - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (–û–ü–ê–°–ù–û!!!)\n/system - —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞\n/users - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ')
                            time.sleep(3)
                        else:
                            bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã –ø–æ —Ä–∞–∑–Ω–æ–º—É. –ö–∞–∫ —Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, —Ç–∞–∫ –∏ –∞–Ω–≥–ª–∏—Å–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏. \n–ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n/prof - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–û–¢–ï\n/inc - –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥\n/cost - –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥\n/balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n/last_inc - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n/last_cost - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n/delete_fin - —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ—Å—Ç–∞—é—Ç—Å—è (–æ–±–Ω—É–ª—è–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å, –¥–æ—Ö–æ–¥,—Ä–∞—Å—Ö–æ–¥)\n/language - –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')
                            time.sleep(3)
                    elif message.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞' or message.text == '–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞' or message.text == '/stopping':
                        if chek_admin(user_id=user_id) == 'True':
                            stopping_markup = types.InlineKeyboardMarkup()
                            but = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞', callback_data=1004)
                            stopping_markup.add(but)
                            bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞? –ï—Å–ª–∏ –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞, —Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!!', reply_markup=stopping_markup)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '/delete_fin' or message.text == '–£–¥–∞–ª–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã' or message.text == '—É–¥–∞–ª–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã':
                        delete_fin_markup = types.InlineKeyboardMarkup()
                        but = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤', callback_data=1005)
                        delete_fin_markup.add(but)
                        bot.send_message(message.chat.id, '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö? –í–µ—Ä–Ω—É—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞! –û—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –í—ã –±–µ—Ä–µ—Ç–µ –Ω–∞ —Å–µ–±—è.', reply_markup=delete_fin_markup)
                    elif message.text == '/logs' or message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏' or message.text == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏':
                        if chek_admin(user_id=user_id) == 'True':
                            file = open('logs.txt', 'rb')
                            bot.send_document(message.chat.id, file)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text == '—Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' or message.text == '–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' or message.text == '/system':
                        if chek_admin(user_id=user_id) == 'True':
                            system_markup = types.InlineKeyboardMarkup(row_width=1)
                            but1 = types.InlineKeyboardButton(text='‚ö†Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞', callback_data=1006)
                            but2 = types.InlineKeyboardButton(text='üì§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏', callback_data=1007)
                            but3 = types.InlineKeyboardButton(text='üö´ –£–¥–∞–ª–∏—Ç—å –ª–æ–≥–∏', callback_data=1008)
                            system_markup.add(but1, but2, but3)
                            bot.send_message(message.chat.id, '–í—ã –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞', reply_markup=system_markup)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    elif message.text =='/language' or message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' or message.text == '–∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫':
                        language = types.InlineKeyboardMarkup(row_width=1)
                        but1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π (RUS)', callback_data=1011)
                        but2 = types.InlineKeyboardButton(text='üá∫üá∏ English (ANG)', callback_data=1012)
                        language.add(but1, but2)
                        bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –Ω—É–∂–Ω–∞ –≤—ã–±—Ä–∞—Ç—å –≤ –Ω–∏–∑—É –ø–æ–¥—Ö–æ–¥—è—à–∏—é –∫–Ω–æ–ø–∫—É.', reply_markup=language)
                    elif message.text == '/users' or message.text == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' or message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
                        if chek_admin(user_id=user_id) == 'True':
                            users()
                            file = open('users.txt', 'r')
                            text = file.read()
                            bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\nid, user_id, user_name, admin, ban, data_reg, language\n\n{text}')
                            file.close()
                            os.remove(os.path.join('users.txt'))
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                    else:
                        bot.send_message(message.chat.id, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é', reply_markup=main_menu())
                elif chek_language(user_id=user_id) == 'ANG':
                    if message.text == 'Income' or message.text == 'income' or message.text == '/inc':
                        bot.send_message(message.chat.id, 'Send a message IN NUMBERS about your income', reply_markup=ang_exit())
                        bot.register_next_step_handler(message, next_msg)
                    elif message.text == 'expense' or message.text == 'Expense' or message.text == '/cost':
                        bot.send_message(message.chat.id, 'Send a message in NUMBERS about your expense', reply_markup=ang_exit())
                        bot.register_next_step_handler(message, next_msg_ex)
                    elif message.text == 'Balance' or message.text == 'balance' or message.text == '/balance':
                        try:
                            bot.send_message(message.chat.id, f'Your balance including all income and expenses: {balance(user_id=user_id)} rubles', reply_markup=ang_main_menu())
                            time.sleep(3)
                        except TypeError:
                            bot.send_message(message.chat.id, '‚ö†Ô∏è Sorry, an error occurred')
                            time.sleep(3)
                    elif message.text == 'Profile üë§' or message.text == 'Profile' or message.text == 'profile' or message.text == '/prof':
                        name = '{0.first_name}'.format(message.from_user)
                        bot.send_message(message.chat.id, f'Your profile:\nYour name: {name}\nYour Telegram ID: {message.from_user.id}\nYour username: @{message.from_user.username}\nRegistration in the bot : {data_reg(user_id=user_id)}\nBot ban: {chek_ban(user_id=user_id)}\nBot admin: {chek_admin(user_id=user_id)}\nYour balance: {balance(user_id=user_id)}', reply_markup=ang_main_menu())
                        time.sleep(3)
                    elif message.text == 'Income/Expense':
                        bot.send_message(message.chat.id, 'Choose an action from the suggested buttons... ', reply_markup=ang_menu())
                        time.sleep(3)
                    elif message.text == 'Show last income' or message.text == 'Show last income' or message.text == '/last_inc':
                        bot.send_message(message.chat.id, f'Last income added: {data_income(user_id=user_id)}\nLast income amount: {last_income(user_id=user_id)}', reply_markup=ang_menu())
                        time.sleep(3)
                    elif message.text == 'Show last expense' or message.text == 'show last expense' or message.text == '/last_cost':
                        bot.send_message(message.chat.id, f'Last expense added: {data_expense(user_id=user_id)}\nLast expense amount: {last_expense(user_id=user_id)}', reply_markup=ang_menu())
                        time.sleep(3)
                    elif message.text == 'Main üîô':
                        bot.send_message(message.chat.id, 'You are in the main menu', reply_markup=ang_main_menu())
                        time.sleep(3)
                    elif message.text == 'Mailing' or message.text == 'Mailing' or message.text == '/mailing':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'Write a message to be sent by all bot users...', reply_markup=ang_exit_admin())
                            bot.register_next_step_handler(message, mailings_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Maintenance' or message.text == 'maintenance':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, "You are in the bot's Maintenance panel. Manage below", reply_markup=ang_TO_menu())
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Administrators' or message.text == 'administrators':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'You are in the admin control panel. Manage below.', reply_markup=ang_admins())
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Ban' or message.text == 'ban':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'You are in the bans control panel. Manage below.', reply_markup=ang_bans())
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Back üîô' or message.text == 'Back üîô':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'You are in the admin panel. Manage below.', reply_markup=ang_adm_menu())
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Add Admin' or message.text == 'add Admin' or message.text == '/setadmin':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'Write the user_id of the person you want to add as admin...', reply_markup=ang_exit_admin())
                            bot.register_next_step_handler(message, add_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Remove Admin' or message.text == 'Remove Admin' or message.text == '/unadmin':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'Write the user_id of the person you want to remove from admins...', reply_markup=ang_exit_admin())
                            bot.register_next_step_handler(message, clr_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Ban' or message.text == 'ban' or message.text == '/ban':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'Enter the user_id of the person you want to block...', reply_markup=ang_exit_admin())
                            bot.register_next_step_handler(message, ban_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Unban' or message.text == 'unban' or message.text == '/unban':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, 'Enter the user_id of the person you want to unblock...', reply_markup=ang_exit_admin())
                            bot.register_next_step_handler(message, clr_ban_msg)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'Show all users' or message.text == 'Show all users' or message.text == '/allusers':
                        if chek_admin(user_id=user_id):
                            bot.send_message(message.chat.id, f'Number of all users:\n{all_users()}')
                    elif message.text == 'Commands' or message.text == 'commands' or message.text == '/cmd':
                        if chek_admin(user_id=user_id) == 'True':
                            bot.send_message(message.chat.id, "Bot commands can be written in different ways. Both in Russian letters and in English commands.\nUser commands: \n/prof - show user profile in BOTA\n/inc - add income\ n/cost - add an expense\n/balance - show a person's current balance\n/last_inc - show a person his last income added to the database\n/last_cost - show a person his last expense added to the database\n/delete_fin - deletes all the user's finances in the database, but the user's data remains (balance, income, expenses are reset)\n/language - change language\n\nAdministrator commands: \n/setadmin - adds an administrator\n/unadmin - removes an administrator\n/mailing - makes mailing to all users \n/tex - puts the bot on maintenance\n/offtex - removes the bot from maintenance\n/ban - bans a person in the bot and the person does not have access to the bot\n/unban - removes the ban from the user and he can use it\ n/allusers - shows all users of the bot\n/stopping - Stopping the bot (DANGER!!!)\n/system - system management of the bot\n/users - show a list of all users")
                            time.sleep(3)
                        else:
                            bot.send_message(message.chat.id, "Bot commands can be written in different ways. Both in Russian letters and in English commands. \nUser commands: \n/prof - show user profile in BOTA\n/inc - add income\ n/cost - add an expense\n/balance - show a person's balance at the moment\n/last_inc - show a person his last added income to the database\n/last_cost - shows the person his last expense added to the database\n/delete_fin - deletes all the user's finances in the database, but the user's data remains (balance, income, expenses are reset)\n/language - change language")
                            time.sleep(3)
                    elif message.text == 'Stop bot' or message.text == 'stop bot' or message.text == '/stopping':
                        if chek_admin(user_id=user_id):
                            stopping_markup = types.InlineKeyboardMarkup()
                            but = types.InlineKeyboardButton(text='‚úÖ Confirm bot stop', callback_data=1004)
                            stopping_markup.add(but)
                            bot.send_message(message.chat.id, 'Are you sure you want to stop the bot? If you stop the bot, you can only start it via System Administrator!!!', reply_markup=stopping_markup)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == '/delete_fin' or message.text == 'Delete finance' or message.text == 'delete finance':
                        delete_fin_markup = types.InlineKeyboardMarkup()
                        but = types.InlineKeyboardButton(text='‚úÖ Confirm finance deletion', callback_data=1005)
                        delete_fin_markup.add(but)
                        bot.send_message(message.chat.id, 'Are you sure you want to delete all finances from the database? You will never be able to return the data! You are responsible for deleting data from the database.', reply_markup=delete_fin_markup)
                    elif message.text == '/logs' or message.text == 'View logs' or message.text == 'view logs':
                        if chek_admin(user_id=user_id):
                            file = open('logs.txt', 'rb')
                            bot.send_document(message.chat.id, file)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text == 'system management' or message.text == 'System management' or message.text == '/system':
                        if chek_admin(user_id=user_id):
                            system_markup = types.InlineKeyboardMarkup(row_width=1)
                            but1 = types.InlineKeyboardButton(text='‚ö†Ô∏è Stop Bot', callback_data=1006)
                            but2 = types.InlineKeyboardButton(text='üì§ View logs', callback_data=1007)
                            but3 = types.InlineKeyboardButton(text='üö´ Delete logs', callback_data=1008)
                            system_markup.add(but1, but2, but3)
                            bot.send_message(message.chat.id, 'You are in bot system control', reply_markup=system_markup)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    elif message.text =='/language' or message.text == 'Change the language' or message.text == 'change the language':
                        language = types.InlineKeyboardMarkup(row_width=1)
                        but1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π (RUS)', callback_data=1011)
                        but2 = types.InlineKeyboardButton(text='üá∫üá∏ English (ANG)', callback_data=1012)
                        language.add(but1, but2)
                        bot.send_message(message.chat.id, 'In order to change the language, you need to select the appropriate button at the bottom.', reply_markup=language)
                    elif message.text == '/users' or message.text == 'view users' or message.text == 'view users':
                        if chek_admin(user_id=user_id) == 'True':
                            users()
                            file = open('users.txt', 'r')
                            text = file.read()
                            bot.send_message(message.chat.id, f'List all users:\nid, user_id, user_name, admin, ban, data_reg, language\n\n{text}')
                            file.close()
                            os.remove(os.path.join('users.txt'))
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                    else:
                        bot.send_message(message.chat.id, "I don't understand you", reply_markup=ang_main_menu())
                else:
                    bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')
            else:
                if chek_language(user_id=user_id) == 'RU':
                    bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')
                    time.sleep(3)
                else:
                    bot.send_message(message.chat.id, "‚ùóÔ∏è You are blocked in this bot. You can't use it")
                    time.sleep(3)
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\nYou are not registered!')
            time.sleep(3)
    else:
        if chek_language(user_id=user_id) == 'RU':
            if chek_admin(user_id=user_id) == 'True':
                if message.text == '–î–æ—Ö–æ–¥' or message.text == '–¥–æ—Ö–æ–¥' or message.text == '/inc':
                    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¶–ò–§–†–ê–ú–ò –æ –í–∞—à–µ–º –¥–æ—Ö–æ–¥–µ', reply_markup=exit())
                    bot.register_next_step_handler(message, next_msg)
                elif message.text == '–†–∞—Å—Ö–æ–¥' or message.text == '—Ä–∞—Å—Ö–æ–¥' or message.text == '/cost':
                    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¶–ò–§–†–ê–ú–ò –æ –í–∞—à–µ–º —Ä–∞—Å—Ö–æ–¥–µ', reply_markup=exit())
                    bot.register_next_step_handler(message, next_msg_ex)
                elif message.text == '–ë–∞–ª–∞–Ω—Å' or message.text == '–±–∞–ª–∞–Ω—Å' or message.text == '/balance':
                    try:
                        bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤: {balance(user_id=user_id)} —Ä—É–±–ª–µ–π', reply_markup=main_menu())
                        time.sleep(3)
                    except TypeError:
                        bot.send_message(message.chat.id, '‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
                        time.sleep(3)
                elif message.text == '–ü—Ä–æ—Ñ–∏–ª—å üë§' or message.text == '–ü—Ä–æ—Ñ–∏–ª—å' or message.text == '–ø—Ä–æ—Ñ–∏–ª—å' or message.text == '/prof':
                    name = '{0.first_name}'.format(message.from_user)
                    bot.send_message(message.chat.id, f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n–í–∞—à–µ –∏–º—è: {name}\n–í–∞—à Telegram ID: {message.from_user.id}\n–í–∞—à username: @{message.from_user.username}\n–†–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ: {data_reg(user_id=user_id)}\n–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤ –±–æ—Ç–µ: {chek_ban(user_id=user_id)}\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞: {chek_admin(user_id=user_id)}\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance(user_id=user_id)}', reply_markup=main_menu())
                    time.sleep(3)
                elif message.text == '–î–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥':
                    bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–µ—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–µ... ', reply_markup=menu())
                    time.sleep(3)
                elif message.text == '–ì–ª–∞–≤–Ω–∞—è üîô':
                    bot.send_message(message.chat.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_menu())
                    time.sleep(3)
                elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞' or message.text == '—Ä–∞—Å—Å—ã–ª–∫–∞' or message.text == '/mailing':
                    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞...', reply_markup=exit_admin())
                    bot.register_next_step_handler(message, mailings_msg)
                elif message.text == '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' or message.text == '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ':
                    bot.send_message(message.chat.id, '–í—ã –≤ –ø–∞–Ω–µ–ª–∏ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –±–æ—Ç–∞. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ', reply_markup=TO_menu())
                elif message.text == '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã' or message.text == '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã':
                    bot.send_message(message.chat.id, '–í—ã –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ.', reply_markup=admins())
                elif message.text == '–ë–∞–Ω' or message.text == '–ë–∞–Ω':
                    bot.send_message(message.chat.id, '–í—ã –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ.', reply_markup=bans())
                elif message.text == '–ù–∞–∑–∞–¥ üîô' or message.text == '–Ω–∞–∑–∞–¥ üîô':
                        bot.send_message(message.chat.id, '–í—ã –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∂–µ.', reply_markup=adm_menu())
                elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '–¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '/setadmin':
                    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã...', reply_markup=exit_admin())
                    bot.register_next_step_handler(message, add_msg)
                elif message.text == '–£–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '—É–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' or message.text == '/unadmin':
                    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–±—Ä–∞—Ç—å –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...', reply_markup=exit_admin())
                    bot.register_next_step_handler(message, clr_msg)
                elif message.text == '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '/ban':
                    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å...', reply_markup=exit_admin())
                    bot.register_next_step_handler(message, ban_msg)
                elif message.text == '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' or message.text == '/unban':
                    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ user_id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å...', reply_markup=exit_admin())
                    bot.register_next_step_handler(message, clr_ban_msg)
                elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' or message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' or message.text == '/allusers':
                    bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{all_users()}')
                elif message.text == '–ö–æ–º–∞–Ω–¥—ã' or message.text == '–∫–æ–º–∞–Ω–¥—ã' or message.text == '/cmd':
                    bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã –ø–æ —Ä–∞–∑–Ω–æ–º—É. –ö–∞–∫ —Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, —Ç–∞–∫ –∏ –∞–Ω–≥–ª–∏—Å–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏. \n–ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n/prof - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–û–¢–ï\n/inc - –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥\n/cost - –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥\n/balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n/last_inc - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n/last_cost - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n/delete_fin - —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ—Å—Ç–∞—é—Ç—Å—è (–æ–±–Ω—É–ª—è–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å, –¥–æ—Ö–æ–¥,—Ä–∞—Å—Ö–æ–¥)\n/language - –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n\n–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: \n/setadmin - –¥–æ–±–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/unadmin - —É–±–∏—Ä–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/mailing - –¥–µ–ª–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n/tex - —Å—Ç–∞–≤–∏—Ç –±–æ—Ç–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\n/offtex - —Å–Ω–∏–º–∞–µ—Ç –±–æ—Ç–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\n/ban - –±–∞–Ω–∏—Ç —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç–µ –∏ —á–µ–ª–æ–≤–µ–∫ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É\n/unban - —Å–Ω–∏–º–∞–µ—Ç –±–∞–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–Ω –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n/allusers - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞\n/stopping - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (–û–ü–ê–°–ù–û!!!)\n/system - —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞\n/users - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
                    time.sleep(3)
                elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥' or message.text == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥' or message.text == '/last_inc':
                    bot.send_message(message.chat.id, f'–ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω: {data_income(user_id=user_id)}\n–°—É–º–º–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Ö–æ–¥–∞: {last_income(user_id=user_id)}')
                    time.sleep(3)
                elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥' or message.text == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥' or message.text == '/last_cost':
                    bot.send_message(message.chat.id, f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω: {data_expense(user_id=user_id)}\n–°—É–º–º–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞: {last_expense(user_id=user_id)}', reply_markup=menu())
                    time.sleep(3)
                elif message.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞' or message.text == '–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞' or message.text == '/stopping':
                    if chek_admin(user_id=user_id):
                        stopping_markup = types.InlineKeyboardMarkup()
                        but = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞', callback_data=1004)
                        stopping_markup.add(but)
                        bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞? –ï—Å–ª–∏ –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞, —Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!!', reply_markup=stopping_markup)
                    else:
                        bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                        time.sleep(3)
                elif message.text == '/delete_fin' or message.text == '–£–¥–∞–ª–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã' or message.text == '—É–¥–∞–ª–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã':
                        delete_fin_markup = types.InlineKeyboardMarkup()
                        but = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤', callback_data=1005)
                        delete_fin_markup.add(but)
                        bot.send_message(message.chat.id, '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö? –í–µ—Ä–Ω—É—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞! –û—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –í—ã –±–µ—Ä–µ—Ç–µ –Ω–∞ —Å–µ–±—è.', reply_markup=delete_fin_markup)
                elif message.text == '/logs' or message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏' or message.text == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏':
                        if chek_admin(user_id=user_id):
                            file = open('logs.txt', 'rb')
                            bot.send_document(message.chat.id, file)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                elif message.text == '—Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' or message.text == '–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' or message.text == '/system':
                        if chek_admin(user_id=user_id):
                            system_markup = types.InlineKeyboardMarkup(row_width=1)
                            but1 = types.InlineKeyboardButton(text='‚ö†Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞', callback_data=1006)
                            but2 = types.InlineKeyboardButton(text='üì§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏', callback_data=1007)
                            but3 = types.InlineKeyboardButton(text='üö´ –£–¥–∞–ª–∏—Ç—å –ª–æ–≥–∏', callback_data=1008)
                            system_markup.add(but1, but2, but3)
                            bot.send_message(message.chat.id, '–í—ã –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞', reply_markup=system_markup)
                        else:
                            bot.send_message(message.chat.id, 'üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!')
                            time.sleep(3)
                elif message.text =='/language' or message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' or message.text == '–∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫':
                        language = types.InlineKeyboardMarkup(row_width=1)
                        but1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π (RUS)', callback_data=1011)
                        but2 = types.InlineKeyboardButton(text='üá∫üá∏ English (ANG)', callback_data=1012)
                        language.add(but1, but2)
                        bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –Ω—É–∂–Ω–∞ –≤—ã–±—Ä–∞—Ç—å –≤ –Ω–∏–∑—É –ø–æ–¥—Ö–æ–¥—è—à–∏—é –∫–Ω–æ–ø–∫—É.', reply_markup=language)
                elif message.text == '/users' or message.text == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' or message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
                    users()
                    file = open('users.txt', 'r')
                    text = file.read()
                    bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\nid, user_id, user_name, admin, ban, data_reg, language\n\n{text}')
                    file.close()
                    os.remove(os.path.join('users.txt'))
                else:
                    bot.send_message(message.chat.id, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é', reply_markup=main_menu())
            else:
                if chek_language(user_id=user_id) == 'RU':
                    bot.send_message(message.chat.id, '‚ö†Ô∏è –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –Ω–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –ø–æ –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–∞–º. –û–∂–∏–¥–∞–π—Ç–µ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–µ–∫—Ç–∞, –ª–∏–±–æ –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞. –ù–∞ –º–æ–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –í–∞–º –±—É–¥–µ—Ç –≤–æ–∑—Ä–∞—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ. –ù–∞–±–µ—Ä–∏—Ç–µ—Å—å —Ç–µ—Ä–ø–µ–Ω–∏—è. –ü—Ä–æ—Å–∏–º –ø—Ä–æ—à–µ–Ω–∏—è! –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ.')
                    time.sleep(3)
                else:
                    bot.send_message(message.chat.id, "‚ö†Ô∏è We apologize, but the bot has been sent for Maintenance, for some reason. Expect news from the project team, or the inclusion of a bot. At the time of the bot maintenance, you cannot use it, if you try to use the bot, an error message will be returned to you. Be patient. We ask for your forgiveness! Good luck.")
                    time.sleep(3)
        elif chek_language(user_id=user_id) == 'ANG':
            if chek_admin(user_id=user_id) == 'True':
                if message.text == 'Income' or message.text == 'income' or message.text == '/inc':
                    bot.send_message(message.chat.id, 'Send a message IN NUMBERS about your income', reply_markup=ang_exit())
                    bot.register_next_step_handler(message, next_msg)
                elif message.text == 'Cost' or message.text == 'cost' or message.text == '/cost':
                    bot.send_message(message.chat.id, 'Send a message in NUMBERS about your expense', reply_markup=ang_exit())
                    bot.register_next_step_handler(message, next_msg_ex)
                elif message.text == 'Balance' or message.text == 'balance' or message.text == '/balance':
                    try:
                        bot.send_message(message.chat.id, f'Your balance including all income and expenses: {balance(user_id=user_id)} rubles', reply_markup=ang_main_menu())
                        time.sleep(3)
                    except TypeError:
                        bot.send_message(message.chat.id, '‚ö†Ô∏è Sorry, an error occurred')
                        time.sleep(3)
                elif message.text == 'Profile üë§' or message.text == 'Profile' or message.text == 'profile' or message.text == '/prof':
                    name = '{0.first_name}'.format(message.from_user)
                    bot.send_message(message.chat.id, f'Your profile:\nYour name: {name}\nYour Telegram ID: {message.from_user.id}\nYour username: @{message.from_user.username}\nRegistration in the bot : {data_reg(user_id=user_id)}\nBot ban: {chek_ban(user_id=user_id)}\nBot admin: {chek_admin(user_id=user_id)}\nYour balance: {balance(user_id=user_id)}', reply_markup= main_menu())
                    time.sleep(3)
                elif message.text == 'Income/Expense':
                    bot.send_message(message.chat.id, 'Choose an action from the suggested buttons... ', reply_markup=ang_menu())
                    time.sleep(3)
                elif message.text == 'Main üîô':
                    bot.send_message(message.chat.id, 'You are in the main menu', reply_markup=ang_main_menu())
                    time.sleep(3)
                elif message.text == 'Mailing' or message.text == 'Mailing' or message.text == '/mailing':
                    bot.send_message(message.chat.id, 'Write a message to be sent by all bot users...', reply_markup=ang_exit_admin())
                    bot.register_next_step_handler(message, mailings_msg)
                elif message.text == 'Maintenance' or message.text == 'Maintenance':
                    bot.send_message(message.chat.id, "You are in the bot's Maintenance panel. Manage below", reply_markup=ang_TO_menu())
                elif message.text == 'Administrators' or message.text == 'Administrators':
                    bot.send_message(message.chat.id, 'You are in the admin control panel. Manage below.', reply_markup=ang_admins())
                elif message.text == 'Ban' or message.text == 'Ban':
                    bot.send_message(message.chat.id, 'You are in the bans control panel. Manage below.', reply_markup=ang_bans())
                elif message.text == 'Back üîô' or message.text == 'Back üîô':
                        bot.send_message(message.chat.id, 'You are in the admin panel. Manage below.', reply_markup=ang_adm_menu())
                elif message.text == 'Add Admin' or message.text == 'Add Admin' or message.text == '/setadmin':
                    bot.send_message(message.chat.id, 'Write the user_id of the person you want to add as admin...', reply_markup=ang_exit_admin())
                    bot.register_next_step_handler(message, add_msg)
                elif message.text == 'Remove Admin' or message.text == 'Remove Admin' or message.text == '/unadmin':
                    bot.send_message(message.chat.id, 'Write the user_id of the person you want to remove from admins...', reply_markup=ang_exit_admin())
                    bot.register_next_step_handler(message, clr_msg)
                elif message.text == 'Ban' or message.text == 'ban' or message.text == '/ban':
                    bot.send_message(message.chat.id, 'Enter the user_id of the person you want to block...', reply_markup=ang_exit_admin())
                    bot.register_next_step_handler(message, ban_msg)
                elif message.text == 'Unban' or message.text == 'unban' or message.text == '/unban':
                    bot.send_message(message.chat.id, 'Enter the user_id of the person you want to unblock...', reply_markup=ang_exit_admin())
                    bot.register_next_step_handler(message, clr_ban_msg)
                elif message.text == 'Show all users' or message.text == 'Show all users' or message.text == '/allusers':
                    bot.send_message(message.chat.id, f'List all users:\n{all_users()}')
                elif message.text == 'Commands' or message.text == 'commands' or message.text == '/cmd':
                    bot.send_message(message.chat.id, "Bot commands can be written in different ways. Both in Russian letters and in English commands. \nUser commands: \n/prof - show user profile in BOTA\n/inc - add income\ n/cost - add an expense\n/balance - show a person's current balance\n/last_inc - show a person his last income added to the database\n/last_cost - show a person his last expense added to the database\n/delete_fin - deletes all the user's finances in the database, but the user's data remains (balance, income, expenses are reset)\n/language - change language\n\nAdministrator commands: \n/setadmin - adds an administrator\n/unadmin - removes an administrator\n/mailing - makes mailing to all users \n/tex - puts the bot on maintenance\n/offtex - removes the bot from maintenance\n/ban - bans a person in the bot and the person does not have access to the bot\n/unban - removes the ban from the user and he can use it\ n/allusers - shows all users of the bot\n/stopping - Stopping the bot (DANGER!!!)\n/system - system management of the bot\n/users - show a list of all users")
                    time.sleep(3)
                elif message.text == 'Show last income' or message.text == 'Show last income' or message.text == '/last_inc':
                    bot.send_message(message.chat.id, f'Last income added: {data_income(user_id=user_id)}\nLast income amount: {last_income(user_id=user_id)}')
                    time.sleep(3)
                elif message.text == 'Show last cost' or message.text == 'Show last cost' or message.text == '/last_cost':
                    bot.send_message(message.chat.id, f'Last expense added: {data_expense(user_id=user_id)}\nLast expense amount: {last_expense(user_id=user_id)}', reply_markup=ang_menu())
                    time.sleep(3)
                elif message.text == 'Stop bot' or message.text == 'stop bot' or message.text == '/stopping':
                    if chek_admin(user_id=user_id):
                        stopping_markup = types.InlineKeyboardMarkup()
                        but = types.InlineKeyboardButton(text='‚úÖ Confirm bot stop', callback_data=1004)
                        stopping_markup.add(but)
                        bot.send_message(message.chat.id, 'Are you sure you want to stop the bot? If you stop the bot, you can only start it via System Administrator!!!', reply_markup=stopping_markup)
                    else:
                        bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                        time.sleep(3)
                elif message.text == '/delete_fin' or message.text == 'Delete finance' or message.text == 'delete finance':
                        delete_fin_markup = types.InlineKeyboardMarkup()
                        but = types.InlineKeyboardButton(text='‚úÖ Confirm finance deletion', callback_data=1005)
                        delete_fin_markup.add(but)
                        bot.send_message(message.chat.id, 'Are you sure you want to delete all finances from the database? You will never be able to return the data! You are responsible for deleting data from the database.', reply_markup=delete_fin_markup)
                elif message.text == '/logs' or message.text == 'View logs' or message.text == 'view logs':
                        if chek_admin(user_id=user_id):
                            file = open('logs.txt', 'rb')
                            bot.send_document(message.chat.id, file)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                elif message.text == 'system management' or message.text == 'System management' or message.text == '/system':
                        if chek_admin(user_id=user_id):
                            system_markup = types.InlineKeyboardMarkup(row_width=1)
                            but1 = types.InlineKeyboardButton(text='‚ö†Ô∏è Stop Bot', callback_data=1006)
                            but2 = types.InlineKeyboardButton(text='üì§ View logs', callback_data=1007)
                            but3 = types.InlineKeyboardButton(text='üö´ Delete logs', callback_data=1008)
                            system_markup.add(but1, but2, but3)
                            bot.send_message(message.chat.id, 'You are in bot system control', reply_markup=system_markup)
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                elif message.text =='/language' or message.text == 'Change the language' or message.text == 'change the language':
                        language = types.InlineKeyboardMarkup(row_width=1)
                        but1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π (RUS)', callback_data=1011)
                        but2 = types.InlineKeyboardButton(text='üá∫üá∏ English (ANG)', callback_data=1012)
                        language.add(but1, but2)
                        bot.send_message(message.chat.id, 'In order to change the language, you need to select the appropriate button at the bottom.', reply_markup=language)
                elif message.text == '/users' or message.text == 'view users' or message.text == 'view users':
                        if chek_admin(user_id=user_id) == 'True':
                            users()
                            file = open('users.txt', 'r')
                            text = file.read()
                            bot.send_message(message.chat.id, f'List all users:\nid, user_id, user_name, admin, ban, data_reg, language\n\n{text}')
                            file.close()
                            os.remove(os.path.join('users.txt'))
                        else:
                            bot.send_message(message.chat.id, 'üö´ You are not an administrator. You do not have permissions!')
                            time.sleep(3)
                else:
                    bot.send_message(message.chat.id, "I don't understand you", reply_markup=ang_main_menu())
            else:
                bot.send_message(message.chat.id, "‚ö†Ô∏è We apologize, but the bot has been sent for Maintenance, for some reason. Expect news from the project team, or the inclusion of a bot. At the time of the bot maintenance, you cannot use it, if you try to use the bot, an error message will be returned to you. Be patient. We ask for your forgiveness! Good luck.")
                time.sleep(3)
        else:
            bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –î–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /language\n\nYou have not selected a language! You cannot continue using the bot. Use /language to select a language')
    
bot.infinity_polling(timeout=10, long_polling_timeout = 5)